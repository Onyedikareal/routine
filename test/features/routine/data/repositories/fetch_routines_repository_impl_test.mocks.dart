// Mocks generated by Mockito 5.2.0 from annotations
// in routine2/test/features/routine/data/repositories/fetch_routines_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:routine2/features/routine/data/datasource/routine_db_manager.dart'
    as _i3;
import 'package:routine2/features/routine/domain/entity/routine_entity.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRoutine_0 extends _i1.Fake implements _i2.Routine {}

/// A class which mocks [RoutineDbManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutineDbManager extends _i1.Mock implements _i3.RoutineDbManager {
  MockRoutineDbManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Routine> addRoutine(
          {String? title,
          String? description,
          String? routineTime,
          String? routineFrequency,
          bool? routineExpired,
          bool? completed}) =>
      (super.noSuchMethod(
              Invocation.method(#addRoutine, [], {
                #title: title,
                #description: description,
                #routineTime: routineTime,
                #routineFrequency: routineFrequency,
                #routineExpired: routineExpired,
                #completed: completed
              }),
              returnValue: Future<_i2.Routine>.value(_FakeRoutine_0()))
          as _i4.Future<_i2.Routine>);
  @override
  _i4.Future<bool> deleteRoutine({int? routineId}) => (super.noSuchMethod(
      Invocation.method(#deleteRoutine, [], {#routineId: routineId}),
      returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> markRoutineDone({int? routineId}) => (super.noSuchMethod(
      Invocation.method(#markRoutineDone, [], {#routineId: routineId}),
      returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> updateRoutine(
          {int? routineId,
          String? title,
          bool? routineExpired,
          String? description}) =>
      (super.noSuchMethod(
          Invocation.method(#updateRoutine, [], {
            #routineId: routineId,
            #title: title,
            #routineExpired: routineExpired,
            #description: description
          }),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<List<_i2.Routine>> fetchRoutines() =>
      (super.noSuchMethod(Invocation.method(#fetchRoutines, []),
              returnValue: Future<List<_i2.Routine>>.value(<_i2.Routine>[]))
          as _i4.Future<List<_i2.Routine>>);
  @override
  _i4.Future<_i2.Routine> fetchRoutineWithID({int? routineID}) => (super
      .noSuchMethod(
          Invocation.method(#fetchRoutineWithID, [], {#routineID: routineID}),
          returnValue: Future<_i2.Routine>.value(_FakeRoutine_0())) as _i4
      .Future<_i2.Routine>);
}
